#include<iostream>
using namespace std;

int main()
{
    // Part 1: Single variable and pointer
    int a = 7;
    int *p = &a;

    cout << "Single variable with pointer:" << endl;
    cout << "a = " << a << endl;
    cout << "Address of a (p) = " << p << endl;
    cout << "Value at p (*p) = " << *p << endl;
    cout << "Address one int ahead (p+1) = " << p + 1 << endl;
    cout << "Value at p plus 1 (*p + 1) = " << *p + 1 << endl;
    // cout << "Undefined behavior *(p + 1): " << *(p + 1) << endl; // Commented out as unsafe
    cout << endl;

    // Part 2: Array and pointer arithmetic
    cout << "Array and pointer arithmetic:" << endl;
    int arr[5] = {10, 20, 30, 40, 50};
    int *ptr = arr;

    cout << "Address of arr = " << arr << endl;
    cout << "Address using ptr = " << ptr << endl;
    cout << "Value at ptr (*ptr) = " << *ptr << endl;
    cout << "Address of next element (arr+1) = " << arr + 1 << endl;
    cout << "Address of next element (ptr+1) = " << ptr + 1 << endl;
    cout << "Value at ptr plus 1 (*ptr + 1) = " << *ptr + 1 << endl;
    cout << "Value at next element (*(ptr+1)) = " << *(ptr + 1) << endl;

    cout << "\nPrinting Array elements:" << endl;
    for(int i = 0; i < 5; i++) {
        cout << *ptr << "  ";
        ptr++;
    }
    cout << endl;

    // Part 3: Double pointer
    cout << "\nDouble Pointer Example:" << endl;
    int **ptr2 = &p;
    cout << "Address of p (ptr2) = " << ptr2 << endl;
    cout << "Value at ptr2 (*ptr2) = " << *ptr2 << endl;
    cout << "Value at **ptr2 (**ptr2) = " << **ptr2 << endl;
    cout << "Address one pointer ahead (ptr2+1) = " << ptr2 + 1 << endl;

    return 0;
}
